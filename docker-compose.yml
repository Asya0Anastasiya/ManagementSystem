version: "3.4"

services:
  data:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
        - "1433:1433"
    environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=Str0ngPassw0rd
    volumes:
        - sqldata:/var/opt/mssql
    networks:
        - current-network


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    hostname: rabbitmq
    environment:
        - RABBITMQ_DEFAULT_USER=asiya
        - RABBITMQ_DEFAULT_PASS=password
    ports:
        - '4369:4369'
        - '5671:5671'
        - '25672:25672'
        - '15671:15671'
        # RabbitMQ instance
        - '5672:5672'
        # Web interface
        - '15672:15672'
    volumes:
        - rabbitmq:/var/lib/rabbitmq/mnesia 
    networks:
        - current-network


  userservice:
    container_name: userservice
    image: asiyar/userservice
    build:
        context: ./ManagementSystem
        dockerfile: ./Dockerfile
    ports:
        - "5001:5001"
    restart: on-failure
    networks:
        - current-network
    depends_on:
        - data


  timetrackingservice:
    container_name: timetrackingservice
    image: asiyar/timetrackingservice
    build:
        context: ./TimeTrackingService
        dockerfile: ./Dockerfile
    ports:
        - "5002:5002"
    restart: on-failure
    networks:
        - current-network
    depends_on:
        - data
        - rabbitmq
 

  documentserviceapi:
    container_name: documentserviceapi
    image: asiyar/documentserviceapi
    environment:
        - GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json
    build:
        context: ./DocumentServiceApi
        dockerfile: ./Dockerfile
    ports:
    - "5003:5003"
    restart: on-failure
    networks: 
        - current-network
    depends_on:
        - data
        - rabbitmq
    #volumes:
        #- ./DocumentServiceApi/app/application_default_credentials.json:/app/application_default_credentials.json



  ocelotservice:
    container_name: ocelotservice
    image: asiyar/ocelotservice
    build:
        context: ./OcelotService
        dockerfile: ./Dockerfile
    ports:
        - "5000:5000"
    restart: on-failure
    networks:
        - current-network


networks:
  current-network:

volumes:
  sqldata:
  rabbitmq:
